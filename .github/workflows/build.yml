name: petgram-backend

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: '14' 
    - name: Publish to Github Packages Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ secrets.GIT_USER }}/${{ secrets.CONTAINER_NAME }}/${{ secrets.CONTAINER_NAME }}
        registry: docker.pkg.github.com
        username: ${{ secrets.GIT_USER }}
        password: ${{ secrets.GITHUB_TOKEN }}
        dockerfile: Dockerfile
        tags: latest
      env:
        EXP_CACHE: ${{ secrets.EXP_CACHE }}
        EXP_TOKEN: ${{ secrets.EXP_TOKEN }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_SECRET_REFRESH: ${{ secrets.JWT_SECRET_REFRESH }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        PORT: ${{ secrets.PORT }}
    - name: Deploy package to digitalocean
      uses: appleboy/ssh-action@master
      env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_PORT: ${{ secrets.PORT }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USER_HOST }}
        key: ${{ secrets.HOST_KEY }}
        port: ${{ secrets.HOST_PORT }}
        envs: GIT_USER,GITHUB_TOKEN,CONTAINER_NAME,APP_PORT
        script: |
          env
          docker login docker.pkg.github.com -u $GIT_USER -p $GITHUB_TOKEN
          CONTAINER="$(docker ps --all --quiet --filter=name='$CONTAINER_NAME')"
          if [ -n "$CONTAINER" ]; then
            docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME
          fi
          docker pull docker.pkg.github.com/$GIT_USER/$CONTAINER_NAME/$CONTAINER_NAME:latest
          docker run --name $CONTAINER_NAME -d -p $APP_PORT:$APP_PORT docker.pkg.github.com/$GIT_USER/$CONTAINER_NAME/$CONTAINER_NAME:latest
